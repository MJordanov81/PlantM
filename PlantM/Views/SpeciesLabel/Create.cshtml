@model PlantM.Models.PlantModels.SpeciesLabel

@{
    ViewBag.Title = "Create";
}




<h1>@ViewBag.Message</h1>

<h2>Create Species Label</h2>

<div class="container">
    <div class="row">           

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-inline" style="margin: 30px">
            <hr/>
            @Html.ValidationSummary(true, "", new {@class = "text-danger"})

            <div class="form-group">
                @Html.LabelFor(model => model.CustomGroupName, htmlAttributes: new {@class = "control-label"})
                <div class="">
                    @Html.DropDownListFor(model => model.CustomGroupName, new SelectList(ViewBag.CustomGroupList, "Value", "Text"), "Please select...", new {htmlAttributes = new {@class = "form-control"}})
                    @Html.ValidationMessageFor(model => model.CustomGroupName, "", new {@class = "text-danger"})
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.FamilyName, htmlAttributes: new {@class = "control-label"})
                <div class="">
                    @Html.DropDownListFor(model => model.FamilyName, new SelectList(ViewBag.FamilyList, "Value", "Text"), "Please select...", new {htmlAttributes = new {@class = "form-control"}})
                    @Html.ValidationMessageFor(model => model.FamilyName, "", new {@class = "text-danger"})
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.GenusName, htmlAttributes: new {@class = "control-label"})
                <div class="">
                    @Html.DropDownListFor(model => model.GenusName, new SelectList(ViewBag.GenusList, "Value", "Text"), "Please select...", new {htmlAttributes = new {@class = "form-control"}})
                    @Html.ValidationMessageFor(model => model.GenusName, "", new {@class = "text-danger"})
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.SpeciesName, htmlAttributes: new {@class = "control-label"})
                <div class="">
                    @Html.DropDownListFor(model => model.SpeciesName, new SelectList(ViewBag.SpeciesList, "Value", "Text"), "Please select...", new {htmlAttributes = new {@class = "form-control"}})
                    @Html.ValidationMessageFor(model => model.SpeciesName, "", new {@class = "text-danger"})
                </div>
            </div>
            
            <div class="form-group">
                @Html.LabelFor(model => model.FieldNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.FieldNumber, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.FieldNumber, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="">
                    <input type="submit" value="Create" class="btn btn-default"/>
                </div>
            </div>
        </div>
    }

    <button class="btn btn-primary">@Html.ActionLink("New custom group", "Create", "CustomGroup")</button>
    <button class="btn btn-primary">@Html.ActionLink("New family", "Create", "Family")</button>
    <button class="btn btn-primary">@Html.ActionLink("New genus", "Create", "Genus")</button>
    <button class="btn btn-primary">@Html.ActionLink("New species", "Create", "Species")</button>
    <button class="btn btn-default">@Html.ActionLink("Back to List", "Index", "Plant")</button>
    </div>
</div>



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}


