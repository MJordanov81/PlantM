@model PagedList.IPagedList<PlantM.Models.PlantModels.Plant>
@using PagedList.Mvc;
@using PlantM.Helpers
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@{
    ViewBag.Title = "Index";
}

<h2>Plants</h2>


@using (Html.BeginForm("Index", "Plant", FormMethod.Get, new { @class = "form-inline"}))
{
    <p>
        Search: @Html.TextBox("searchString", ViewBag.CurrentFilter as string, new { @class = "form-control" })
        <button type="submit" class="btn btn-default">Search</button>
    </p>
}

<div id="image-zoom"></div>

<table class="table table-hover">
    <tr>
        <th>
            @Html.DisplayName("Status")
        </th>
        <th>
            @Html.DisplayName("Photo")
        </th>
        <th>
            @Html.DisplayNameFor(model => model[0].CollectionNumber)
            @Html.ActionLink(" ", "Index", "Plant", new { sortOrder = ViewBag.CollectionNumberSortParam, currentFilter = ViewBag.CurrentFilter }, new { @class = "glyphicon glyphicon-triangle-bottom" })
        </th>
        <th>          
            @Html.DisplayNameFor(model => model[0].SpeciesLabel)
            @Html.ActionLink(" ", "Index", "Plant", new { sortOrder = ViewBag.SpeciesLabelParam, currentFilter = ViewBag.CurrentFilter }, new { @class = "glyphicon glyphicon-triangle-bottom" })
        </th>
        <th>
            @Html.DisplayNameFor(model => model[0].Location)
            @Html.ActionLink(" ", "Index", "Plant", new { sortOrder = ViewBag.LocationSortParam, currentFilter = ViewBag.CurrentFilter }, new { @class = "glyphicon glyphicon-triangle-bottom" })
        </th>
        <th>
            @Html.DisplayNameFor(model => model[0].SoilName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model[0].Size)
        </th>
        <th>
            @Html.DisplayNameFor(model => model[0].Age)
        </th>
        <th>
            @Html.DisplayNameFor(model => model[0].PotType)
        </th>
        <th></th>
    </tr>

    
    
    @foreach (var item in Model)
    {
        <tr>
            <td>
                @if (item.IsDeleted)
                {
                    @Html.Label($"D", new { @class = "label-inactive-plant label-in-list" })
                }
                else if (item.HasWithered)
                {
                    @Html.Label($"W", new { @class = "label-inactive-plant label-in-list" })
                }
                else
                {
                    @Html.Label($"A", new { @class = "label-active-plant label-in-list", @style = "color:white;" })
                }
            </td>
            <td>
                @Html.Image(item.PhotoUrl, "photo", "0px", "img-thumbnail")
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CollectionNumber)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.SpeciesLabelName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.LocationName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.SoilName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Size)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Age)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.PotType)
            </td>
            <td>
                @Html.ActionLink("Details", "Details", new {id = item.CollectionNumber}, new { @class = "btn btn-sm" })
            </td>
        </tr>
    }

</table>



<br />
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("Index",
    new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))
